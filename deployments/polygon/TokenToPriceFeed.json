{
  "address": "0xfBC5cfEb809c6352Bc4ef2FFe842f72a8769E45e",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mcr",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mlr",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_borrowRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "NewTokenPriceFeed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DECIMAL_PRECISION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "LIQUIDATION_RESERVE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_BORROWING_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_INT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_REDEMPTION_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT10",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENT_05",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "borrowRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "mcr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "mlr",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_mcr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mlr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_borrowRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "setTokenPriceFeed",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeed",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "priceFeed",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mcr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mlr",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb5ce1433e4b7d0a4ffa2368175afb3db3bb7b8d8a28a83bf256ba82d5bdd888b",
  "receipt": {
    "to": null,
    "from": "0x109861a2A539ddB151eE591588a14CF86309e4E5",
    "contractAddress": "0xfBC5cfEb809c6352Bc4ef2FFe842f72a8769E45e",
    "transactionIndex": 62,
    "gasUsed": "748810",
    "logsBloom": "0x
    "blockHash": "0xd3bf1634e25468c5c44bb8a69ee85844bac0016835ff3fcf3c37d3481f849e3c",
    "transactionHash": "0xb5ce1433e4b7d0a4ffa2368175afb3db3bb7b8d8a28a83bf256ba82d5bdd888b",
    "logs": [
      {
        "transactionIndex": 62,
        "blockNumber": 49417029,
        "transactionHash": "0xb5ce1433e4b7d0a4ffa2368175afb3db3bb7b8d8a28a83bf256ba82d5bdd888b",
        "address": "0xfBC5cfEb809c6352Bc4ef2FFe842f72a8769E45e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000109861a2a539ddb151ee591588a14cf86309e4e5"
        ],
        "data": "0x",
        "logIndex": 265,
        "blockHash": "0xd3bf1634e25468c5c44bb8a69ee85844bac0016835ff3fcf3c37d3481f849e3c"
      },
      {
        "transactionIndex": 62,
        "blockNumber": 49417029,
        "transactionHash": "0xb5ce1433e4b7d0a4ffa2368175afb3db3bb7b8d8a28a83bf256ba82d5bdd888b",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000109861a2a539ddb151ee591588a14cf86309e4e5",
          "0x00000000000000000000000067b94473d81d0cd00849d563c94d0432ac988b49"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000001413d3f7debf0000000000000000000000000000000000000000000000004974427bbed5c59810000000000000000000000000000000000000000000005d9bc5e30da0068e1520000000000000000000000000000000000000000000000049742e67eadde6d910000000000000000000000000000000000000000000005d9bc5f72173fe6cd42",
        "logIndex": 266,
        "blockHash": "0xd3bf1634e25468c5c44bb8a69ee85844bac0016835ff3fcf3c37d3481f849e3c"
      }
    ],
    "blockNumber": 49417029,
    "cumulativeGasUsed": "10134495",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3d7ac3cd8c655c7d05e6510673d0ef5d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mcr\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mlr\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_borrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"NewTokenPriceFeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DECIMAL_PRECISION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDATION_RESERVE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_BORROWING_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_INT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REDEMPTION_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT10\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENT_05\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"borrowRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"mcr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"mlr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_mcr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mlr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"setTokenPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"tokenPriceFeed\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mcr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mlr\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setTokenPriceFeed(address,address,uint256,uint256,uint256,uint256)\":{\"details\":\"to set or change priceFeed contract for token\",\"params\":{\"_decimals\":\"decimals of the token\",\"_mcr\":\"minimal collateral ratio of the token\",\"_mlr\":\"minimal liquidation ratio of the token\",\"_priceFeed\":\"address of the PriceFeed contract for token\",\"_token\":\"address of the token\"}},\"tokenPrice(address)\":{\"details\":\"to get token price\",\"params\":{\"_token\":\"address of the token\"}},\"transferOwnership(address)\":{\"details\":\"transfers user's trove ownership after revoking other roles from other addresses\",\"params\":{\"_newOwner\":\"the address of the new owner\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenToPriceFeed.sol\":\"TokenToPriceFeed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\",\"keccak256\":\"0x687142c633b33037c3137b6bfeef848a44eb1ef83fb5fdb59a3affdf28a46516\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/TokenToPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\\\";\\nimport \\\"./interfaces/IPriceFeed.sol\\\";\\nimport \\\"./utils/constants.sol\\\";\\nimport \\\"./interfaces/ITokenPriceFeed.sol\\\";\\n\\ncontract TokenToPriceFeed is Ownable, Constants, ITokenPriceFeed {\\n    // the token list is a mapping from Token address to Price Feed address\\n    mapping(address => TokenInfo) public tokens;\\n\\n    function owner() public view override(Ownable, IOwnable) returns (address) {\\n        return Ownable.owner();\\n    }\\n\\n    /// @dev to get token price\\n    /// @param  _token address of the token\\n    function tokenPrice(address _token) public view override returns (uint256) {\\n        return IPriceFeed(tokens[_token].priceFeed).price();\\n    }\\n\\n    function tokenPriceFeed(address _token) public view override returns (address) {\\n        return tokens[_token].priceFeed;\\n    }\\n\\n    function mcr(address _token) public view override returns (uint256) {\\n        return tokens[_token].mcr;\\n    }\\n\\n    function decimals(address _token) public view override returns (uint256) {\\n        return tokens[_token].decimals;\\n    }\\n\\n    function mlr(address _token) public view override returns (uint256) {\\n        return tokens[_token].mlr;\\n    }\\n\\n    function borrowRate(address _token) public view override returns (uint256) {\\n        return tokens[_token].borrowRate;\\n    }\\n\\n    /// @dev to set or change priceFeed contract for token\\n    /// @param  _token address of the token\\n    /// @param  _priceFeed address of the PriceFeed contract for token\\n    /// @param  _mcr minimal collateral ratio of the token\\n    /// @param  _mlr minimal liquidation ratio of the token\\n    /// @param  _decimals decimals of the token\\n    function setTokenPriceFeed(\\n        address _token,\\n        address _priceFeed,\\n        uint256 _mcr,\\n        uint256 _mlr,\\n        uint256 _borrowRate,\\n        uint256 _decimals\\n    ) public override onlyOwner {\\n        require(_mcr >= 100, \\\"MCR < 100\\\");\\n        require(_mlr >= 100 && _mlr <= _mcr, \\\"MLR < 100 or MLR > MCR\\\");\\n        require(_decimals > 0, \\\"decimals = 0\\\");\\n        require(_borrowRate < 10 ether, \\\"borrowRate >= 10%\\\");\\n\\n        TokenInfo memory token = tokens[_token];\\n        token.priceFeed = _priceFeed;\\n        IERC20Metadata erc20 = IERC20Metadata(_token);\\n        token.mcr = (DECIMAL_PRECISION * _mcr) / 100;\\n        token.mlr = (DECIMAL_PRECISION * _mlr) / 100;\\n        token.borrowRate = _borrowRate;\\n        token.decimals = _decimals;\\n        emit NewTokenPriceFeed(\\n            _token,\\n            _priceFeed,\\n            erc20.name(),\\n            erc20.symbol(),\\n            token.mcr,\\n            token.mlr,\\n            token.borrowRate,\\n            token.decimals\\n        );\\n        tokens[_token] = token;\\n    }\\n\\n    /**\\n     * @dev transfers user's trove ownership after revoking other roles from other addresses\\n     * @param _newOwner the address of the new owner\\n     */\\n    function transferOwnership(address _newOwner) public override(Ownable, IOwnable) {\\n        Ownable.transferOwnership(_newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x581be25035cf514794f7df6cdea6d9c4d9f7702d820af46193da0058fa2bb2dc\",\"license\":\"MIT\"},\"contracts/interfaces/IOwnable.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IOwnable {\\n  /**\\n   * @dev Returns the address of the current owner.\\n   */\\n  function owner() external view returns (address);\\n\\n  /**\\n   * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n   * Can only be called by the current owner.\\n   */\\n  function transferOwnership(address newOwner) external;\\n}\\n\",\"keccak256\":\"0x955ead6c2a923863ba607a752e4a9924ab4fe4d07dd6cf09e5f68d0bece11049\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IPriceFeed {\\n  function token() external view returns (address);\\n\\n  function price() external view returns (uint256);\\n\\n  function pricePoint() external view returns (uint256);\\n\\n  function emitPriceSignal() external;\\n\\n  event PriceUpdate(address token, uint256 price, uint256 average);\\n}\\n\",\"keccak256\":\"0x57a011d8bc429249a622be078f750d045d2d9a1bb0b153968848cc8895eb02b3\",\"license\":\"MIT\"},\"contracts/interfaces/ITokenPriceFeed.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"./IOwnable.sol\\\";\\n\\ninterface ITokenPriceFeed is IOwnable {\\n    struct TokenInfo {\\n        address priceFeed;\\n        uint256 mcr; // Minimum Collateralization Ratio\\n        uint256 mlr; // Minimum Liquidation Ratio\\n        uint256 borrowRate;\\n        uint256 decimals;\\n    }\\n\\n    function tokenPriceFeed(address) external view returns (address);\\n\\n    function tokenPrice(address _token) external view returns (uint256);\\n\\n    function mcr(address _token) external view returns (uint256);\\n\\n    function decimals(address _token) external view returns (uint256);\\n\\n    function mlr(address _token) external view returns (uint256);\\n\\n    function borrowRate(address _token) external view returns (uint256);\\n\\n    function setTokenPriceFeed(address _token, address _priceFeed, uint256 _mcr, uint256 _mlr, uint256 _borrowRate, uint256 _decimals) external;\\n\\n    event NewTokenPriceFeed(\\n        address _token,\\n        address _priceFeed,\\n        string _name,\\n        string _symbol,\\n        uint256 _mcr,\\n        uint256 _mlr,\\n        uint256 _borrowRate,\\n        uint256 _decimals\\n    );\\n}\\n\",\"keccak256\":\"0xbc40f3c92c4f7a12a4a053d372c7c8621b16e104c0b0d3c20ddf6d8950aa6b90\",\"license\":\"MIT\"},\"contracts/utils/constants.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ncontract Constants {\\n  uint256 public constant DECIMAL_PRECISION = 1e18;\\n  uint256 public constant LIQUIDATION_RESERVE = 1e18;\\n  uint256 public constant MAX_INT = 2**256 - 1;\\n\\n  uint256 public constant PERCENT = (DECIMAL_PRECISION * 1) / 100; // 1%\\n  uint256 public constant PERCENT10 = PERCENT * 10; // 10%\\n  uint256 public constant PERCENT_05 = PERCENT / 2; // 0.5%\\n\\n  uint256 public constant MAX_BORROWING_RATE = (DECIMAL_PRECISION * 5) / 100; // 5%\\n  uint256 public constant MAX_REDEMPTION_RATE = (DECIMAL_PRECISION * 1) / 100; // 1%\\n\\n}\\n\",\"keccak256\":\"0xd86e0015d9180d99864bdf3b0f512e8054d98e7e68e61ac081facedccffb4378\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c278061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c8063a20baee6116100cd578063b85a8b2011610081578063d449a83211610066578063d449a832146102a7578063e4860339146102d3578063f2fde38b1461034d57600080fd5b8063b85a8b201461019e578063bb991f111461029457600080fd5b8063abdc5541116100b2578063abdc55411461027c578063aceb2d0414610284578063ad09014d1461028c57600080fd5b8063a20baee614610214578063aa41911f1461024f57600080fd5b806375b78544116101245780638da5cb5b116101095780638da5cb5b146101ef578063923c1eec146102145780639878cbb31461022357600080fd5b806375b78544146101b057806384ba3f69146101dc57600080fd5b806308c728e114610156578063098d3228146101955780634bb970421461019e578063715018a6146101a6575b600080fd5b61018261016436600461099e565b6001600160a01b031660009081526001602052604090206003015490565b6040519081526020015b60405180910390f35b61018260001981565b610182610360565b6101ae610382565b005b6101826101be36600461099e565b6001600160a01b031660009081526001602052604090206002015490565b6101826101ea36600461099e565b610396565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161018c565b610182670de0b6b3a764000081565b6101fc61023136600461099e565b6001600160a01b039081166000908152600160205260409020541690565b61018261025d36600461099e565b6001600160a01b03166000908152600160208190526040909120015490565b610182610430565b610182610445565b610182610466565b6101ae6102a23660046109c0565b610490565b6101826102b536600461099e565b6001600160a01b031660009081526001602052604090206004015490565b61031b6102e136600461099e565b6001602081905260009182526040909120805491810154600282015460038301546004909301546001600160a01b03909416939192909185565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00161018c565b6101ae61035b36600461099e565b610832565b6064610375670de0b6b3a76400006001610a15565b61037f9190610a3a565b81565b61038a61083e565b6103946000610898565b565b6001600160a01b0380821660009081526001602090815260408083205481517fa035b1fe00000000000000000000000000000000000000000000000000000000815291519394169263a035b1fe926004808401939192918290030181865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a5c565b92915050565b6064610375670de0b6b3a76400006005610a15565b6002606461045c670de0b6b3a76400006001610a15565b6103759190610a3a565b606461047b670de0b6b3a76400006001610a15565b6104859190610a3a565b61037f90600a610a15565b61049861083e565b60648410156104ee5760405162461bcd60e51b815260206004820152600960248201527f4d4352203c20313030000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b606483101580156104ff5750838311155b61054b5760405162461bcd60e51b815260206004820152601660248201527f4d4c52203c20313030206f72204d4c52203e204d43520000000000000000000060448201526064016104e5565b6000811161059b5760405162461bcd60e51b815260206004820152600c60248201527f646563696d616c73203d2030000000000000000000000000000000000000000060448201526064016104e5565b678ac7230489e8000082106105f25760405162461bcd60e51b815260206004820152601160248201527f626f72726f7752617465203e3d2031302500000000000000000000000000000060448201526064016104e5565b6001600160a01b03808716600090815260016020818152604092839020835160a0810185529281015491830191909152600281015492820192909252600382015460608201526004909101546080820152908616815286606461065d87670de0b6b3a7640000610a15565b6106679190610a3a565b6020830152606461068086670de0b6b3a7640000610a15565b61068a9190610a3a565b82604001818152505083826060018181525050828260800181815250507f4e3ca5055d5696ad688596326d7f0efc1fe560593ad98288eff8a56cebca6a078888836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107309190810190610aaf565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561076e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107969190810190610aaf565b602087015160408089015160608a015160808b015192516107bc98979695949390610b88565b60405180910390a1506001600160a01b039687166000908152600160208181526040928390208451815473ffffffffffffffffffffffffffffffffffffffff19169b169a909a178a5583015190890155810151600288015560608101516003880155608001516004909601959095555050505050565b61083b816108f5565b50565b6000546001600160a01b031633146103945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e5565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108fd61083e565b6001600160a01b0381166109795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104e5565b61083b81610898565b80356001600160a01b038116811461099957600080fd5b919050565b6000602082840312156109b057600080fd5b6109b982610982565b9392505050565b60008060008060008060c087890312156109d957600080fd5b6109e287610982565b95506109f060208801610982565b95989597505050506040840135936060810135936080820135935060a0909101359150565b808202811582820484141761042a57634e487b7160e01b600052601160045260246000fd5b600082610a5757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610a6e57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610aa6578181015183820152602001610a8e565b50506000910152565b600060208284031215610ac157600080fd5b815167ffffffffffffffff80821115610ad957600080fd5b818401915084601f830112610aed57600080fd5b815181811115610aff57610aff610a75565b604051601f8201601f19908116603f01168101908382118183101715610b2757610b27610a75565b81604052828152876020848701011115610b4057600080fd5b610b51836020830160208801610a8b565b979650505050505050565b60008151808452610b74816020860160208601610a8b565b601f01601f19169290920160200192915050565b60006101006001600160a01b03808c168452808b16602085015250806040840152610bb58184018a610b5c565b90508281036060840152610bc98189610b5c565b9150508560808301528460a08301528360c08301528260e0830152999850505050505050505056fea2646970667358221220f9f7342ede5b8e48fca8a230c9533a38650afe2c16242f97e59d0c97d3a23d3c64736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101515760003560e01c8063a20baee6116100cd578063b85a8b2011610081578063d449a83211610066578063d449a832146102a7578063e4860339146102d3578063f2fde38b1461034d57600080fd5b8063b85a8b201461019e578063bb991f111461029457600080fd5b8063abdc5541116100b2578063abdc55411461027c578063aceb2d0414610284578063ad09014d1461028c57600080fd5b8063a20baee614610214578063aa41911f1461024f57600080fd5b806375b78544116101245780638da5cb5b116101095780638da5cb5b146101ef578063923c1eec146102145780639878cbb31461022357600080fd5b806375b78544146101b057806384ba3f69146101dc57600080fd5b806308c728e114610156578063098d3228146101955780634bb970421461019e578063715018a6146101a6575b600080fd5b61018261016436600461099e565b6001600160a01b031660009081526001602052604090206003015490565b6040519081526020015b60405180910390f35b61018260001981565b610182610360565b6101ae610382565b005b6101826101be36600461099e565b6001600160a01b031660009081526001602052604090206002015490565b6101826101ea36600461099e565b610396565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161018c565b610182670de0b6b3a764000081565b6101fc61023136600461099e565b6001600160a01b039081166000908152600160205260409020541690565b61018261025d36600461099e565b6001600160a01b03166000908152600160208190526040909120015490565b610182610430565b610182610445565b610182610466565b6101ae6102a23660046109c0565b610490565b6101826102b536600461099e565b6001600160a01b031660009081526001602052604090206004015490565b61031b6102e136600461099e565b6001602081905260009182526040909120805491810154600282015460038301546004909301546001600160a01b03909416939192909185565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00161018c565b6101ae61035b36600461099e565b610832565b6064610375670de0b6b3a76400006001610a15565b61037f9190610a3a565b81565b61038a61083e565b6103946000610898565b565b6001600160a01b0380821660009081526001602090815260408083205481517fa035b1fe00000000000000000000000000000000000000000000000000000000815291519394169263a035b1fe926004808401939192918290030181865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a9190610a5c565b92915050565b6064610375670de0b6b3a76400006005610a15565b6002606461045c670de0b6b3a76400006001610a15565b6103759190610a3a565b606461047b670de0b6b3a76400006001610a15565b6104859190610a3a565b61037f90600a610a15565b61049861083e565b60648410156104ee5760405162461bcd60e51b815260206004820152600960248201527f4d4352203c20313030000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b606483101580156104ff5750838311155b61054b5760405162461bcd60e51b815260206004820152601660248201527f4d4c52203c20313030206f72204d4c52203e204d43520000000000000000000060448201526064016104e5565b6000811161059b5760405162461bcd60e51b815260206004820152600c60248201527f646563696d616c73203d2030000000000000000000000000000000000000000060448201526064016104e5565b678ac7230489e8000082106105f25760405162461bcd60e51b815260206004820152601160248201527f626f72726f7752617465203e3d2031302500000000000000000000000000000060448201526064016104e5565b6001600160a01b03808716600090815260016020818152604092839020835160a0810185529281015491830191909152600281015492820192909252600382015460608201526004909101546080820152908616815286606461065d87670de0b6b3a7640000610a15565b6106679190610a3a565b6020830152606461068086670de0b6b3a7640000610a15565b61068a9190610a3a565b82604001818152505083826060018181525050828260800181815250507f4e3ca5055d5696ad688596326d7f0efc1fe560593ad98288eff8a56cebca6a078888836001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015610708573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107309190810190610aaf565b846001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801561076e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107969190810190610aaf565b602087015160408089015160608a015160808b015192516107bc98979695949390610b88565b60405180910390a1506001600160a01b039687166000908152600160208181526040928390208451815473ffffffffffffffffffffffffffffffffffffffff19169b169a909a178a5583015190890155810151600288015560608101516003880155608001516004909601959095555050505050565b61083b816108f5565b50565b6000546001600160a01b031633146103945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e5565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6108fd61083e565b6001600160a01b0381166109795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104e5565b61083b81610898565b80356001600160a01b038116811461099957600080fd5b919050565b6000602082840312156109b057600080fd5b6109b982610982565b9392505050565b60008060008060008060c087890312156109d957600080fd5b6109e287610982565b95506109f060208801610982565b95989597505050506040840135936060810135936080820135935060a0909101359150565b808202811582820484141761042a57634e487b7160e01b600052601160045260246000fd5b600082610a5757634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610a6e57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610aa6578181015183820152602001610a8e565b50506000910152565b600060208284031215610ac157600080fd5b815167ffffffffffffffff80821115610ad957600080fd5b818401915084601f830112610aed57600080fd5b815181811115610aff57610aff610a75565b604051601f8201601f19908116603f01168101908382118183101715610b2757610b27610a75565b81604052828152876020848701011115610b4057600080fd5b610b51836020830160208801610a8b565b979650505050505050565b60008151808452610b74816020860160208601610a8b565b601f01601f19169290920160200192915050565b60006101006001600160a01b03808c168452808b16602085015250806040840152610bb58184018a610b5c565b90508281036060840152610bc98189610b5c565b9150508560808301528460a08301528360c08301528260e0830152999850505050505050505056fea2646970667358221220f9f7342ede5b8e48fca8a230c9533a38650afe2c16242f97e59d0c97d3a23d3c64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setTokenPriceFeed(address,address,uint256,uint256,uint256,uint256)": {
        "details": "to set or change priceFeed contract for token",
        "params": {
          "_decimals": "decimals of the token",
          "_mcr": "minimal collateral ratio of the token",
          "_mlr": "minimal liquidation ratio of the token",
          "_priceFeed": "address of the PriceFeed contract for token",
          "_token": "address of the token"
        }
      },
      "tokenPrice(address)": {
        "details": "to get token price",
        "params": {
          "_token": "address of the token"
        }
      },
      "transferOwnership(address)": {
        "details": "transfers user's trove ownership after revoking other roles from other addresses",
        "params": {
          "_newOwner": "the address of the new owner"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 110,
        "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 7585,
        "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
        "label": "tokens",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(TokenInfo)12315_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(TokenInfo)12315_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct ITokenPriceFeed.TokenInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenInfo)12315_storage"
      },
      "t_struct(TokenInfo)12315_storage": {
        "encoding": "inplace",
        "label": "struct ITokenPriceFeed.TokenInfo",
        "members": [
          {
            "astId": 12306,
            "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
            "label": "priceFeed",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12308,
            "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
            "label": "mcr",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 12310,
            "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
            "label": "mlr",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 12312,
            "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
            "label": "borrowRate",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 12314,
            "contract": "contracts/TokenToPriceFeed.sol:TokenToPriceFeed",
            "label": "decimals",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}